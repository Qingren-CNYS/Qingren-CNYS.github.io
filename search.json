[{"title":"New_Start","url":"/posts/24dfbbf5/","content":"<p>好吧 之前写的很长一篇没写md复制不上来，麻了         </p>\n<p>以此作为界线，开始一个新的时期</p>\n<hr>\n","tags":["other"]},{"title":"日语学习记录","url":"/posts/e29c0804/","content":""},{"title":"英语词汇记录","url":"/posts/cd99ed91/","content":""},{"title":"passwords","url":"/posts/289bdoxh/","content":"<h1 id=\"just-a-test-for-function-of-password\"><a href=\"#just-a-test-for-function-of-password\" class=\"headerlink\" title=\"just a test for function of password!!\"></a>just a test for function of password!!</h1>","tags":["other"]},{"title":"1210信友队","url":"/posts/1532f9c1/","content":"<p>很奇怪的，今天突然变成了oi赛制，然后开心地褒姒了</p>\n<hr>\n<h2 id=\"T1-最小均值\"><a href=\"#T1-最小均值\" class=\"headerlink\" title=\"T1 最小均值\"></a>T1 <a href=\"https://www.xinyoudui.com/contest?courses=676&books=659&pages=18969&fragments=58804&problemId=11032\">最小均值</a></h2><p>老师说这是一个很经典的分数规划，虽然我听不懂这是什么，但是考试的时候还是想出来做法。</p>\n<p>要求最小值问题，加上这题明显不可以贪心，那必定是地皮或者二分。</p>\n<p>然后想到，均值乘上边数和这个环上边权之和是一样的。所以就可以转换为将所有边权减去答案，然后spfa找负环的问题。这样的最优性问题使用二分解决就是显然的了。</p>\n<p>题解上还有一个柿子，但是我觉得，没必要，这样已经很清楚了。</p>\n<p>○：luoguP3199</p>\n<h2 id=\"T2-路线规划\"><a href=\"#T2-路线规划\" class=\"headerlink\" title=\"T2 路线规划\"></a>T2 <a href=\"https://www.xinyoudui.com/contest?courses=676&books=659&pages=18969&fragments=58804&problemId=15784\">路线规划</a></h2><p>好，开题，看题目，瞧了一瞧发现要算期望！！我天呢，然后我就润了</p>\n<p>然后老师开始讲题，发现只要所有的期望加起来就好了，似乎完全就是一个黄题</p>\n<p>原来是这样吗，那我真是小丑了。不过这次两道题都很会卡精度哦，这是坏的。</p>\n<p>乍一眼看，这一题的情景很像图上的背包，虽然这个想法很离谱，但是也不至于八竿子打不着边：我们考虑使用地皮。再者：<em>两个人游玩的过程完全一样又互相不影响</em>，唯一的区别就是b1i或者b2i。所以说，只要会了一个人怎么算，另一个人的算法也是显然的。用<em>f(i,j)<em>表示当前到了第</em>i</em>个点，第<em>j</em>分钟。转移的时候取其中一种转移的概率就是 1&#x2F;路径条数。那么期望再乘上价值就好了。<br>$$<br>f(i,j)×\\frac{1}{x} \\to f[k][j+t(i,k)+c(k)] \\<br>ans &#x3D; \\sum^n_{i&#x3D;1} \\sum_j h_i ×f(i,j)\\<br>O(nm)的复杂度<br>$$</p>\n<p>以后遇到了概率的题，牢记概率的总和是1.然后这个1会分成n份不断地走到下一步的状态，然后这样一直分下去。<b>并且总和始终不变，收益喝前喝后也没有关系</b>，所以一般下一步就是将期望收益去乘上概率。然后发现，概率似乎也没有这么可怕了？<del>你可真是站着说话不腰疼</del></p>\n<hr>\n<h2 id=\"T3回文串\"><a href=\"#T3回文串\" class=\"headerlink\" title=\"T3回文串\"></a>T3<a href=\"https://www.xinyoudui.com/contest?courses=676&books=659&pages=18969&fragments=58804&problemId=11033\">回文串</a></h2><p>这一题一看就有一堆做法。什么PAM什么hash什么地皮和二位前缀和</p>\n<p>题解用了二维前缀和那种做法，至于我，我是傻逼</p>\n<hr>\n<p>下面就是一些单独讲的题目了</p>\n","tags":["oi"]},{"title":"杭二学科营-基本不等式","url":"/posts/884b5dd9/","content":""},{"title":"11.12 xyd练习","url":"/posts/34045630/","content":"<p>这次练习结果十分之惨，基本上题目都没拿分。离谱。<br>另外信友队的题目最近都没什么原题了，这是好的。（但是没有双倍经验了ww）                                             </p>\n<p>T1：<a href=\"https://www.xinyoudui.com/contest?courses=676&books=659&pages=18948&fragments=58800&problemId=11016\">丑数</a>                 </p>\n<p>话说网络上真的好多丑数的题啊，这道最不应该的就是把题意理解错了。我以为因数只能有这些质数，然后想到了一个方法最后输出了15。额……十分尴尬              </p>\n<p>十分魔幻的是，我后来发现了洛谷上有一道usaco题意和我错误理解的题意是一样的，于是莫名其妙的经验get了！        </p>\n<p>这题的正解大概就是二分。使用容斥原理，要求出一个数以下包含多少个丑数是很容易的。而且他的素数是均匀随机的。所以我们dfs的时间复杂度也并不会很高。但是我以为他的复杂度是nlogn所以没有写，然而实际上相当于只有一个常数带一个log，顶不到n。<br>$$<br>ans &#x3D; \\sum_{S \\in T }(-1)^{|S|-1}(\\lfloor \\frac{n}{\\prod _ {a_i\\in S}a_i} \\rfloor)<br>$$<br>最后是使用我错解的程序改了一改变成50分暴力交掉了。</p>\n<hr>\n<p>T2：<a href=\"https://www.xinyoudui.com/contest?courses=676&books=659&pages=18948&fragments=58800&problemId=15806\">一长串题目名字我也懒得打</a></p>\n<p>题目却和题目名字相反：它只有几个柿子<br>$$<br>Have: σ k(n) &#x3D; \\sum _{d|n} d^k，ball: \\sum^n{i&#x3D;1} \\sigma_k(i) \\mod 10^9+7\\</p>\n<p>circlePersimmon &#x3D; \\sum^n{i&#x3D;1}\\sum{d|i}d^k &#x3D; \\sum^n_{d&#x3D;1}d^k\\lfloor \\frac d {p(d)} \\rfloor^k<br>$$<br>（因为发现公式里塞中文会炸掉所以进行了一些迫真英语</p>\n<p>就是这么简单。然后我们仔细观察这个柿子，发现了一个<code>d|n</code>。这个时候我们理应警觉起来：其实这道题目很可能还是在搞因数。想到这些幂的计算是否有一些累赘？所以考虑一个d的最小质因子p(d)，则有：<br>$$<br>d^k &#x3D; (p(d)\\frac d {p(d)})^k &#x3D; p(d)^k(\\frac d {p(d)})^k<br>$$</p>\n<p>所以说如果d不是质数的话，就会存在一个p(d)，然后推出来就可以O(1)得到k次幂的值，所以只需要计算每一个质数的k次幂。看到质数、快速幂、O(1)这些要素，dna就可以开始动了：使用线性筛求出p(d)。时间复杂度是log级别的             </p>\n<p>然而我的dna动错了。我看到那一堆要素想到了数论分块，所以遗憾离场。</p>\n<hr>\n<p>T3：<a href=\"https://www.xinyoudui.com/contest?courses=676&books=659&pages=18948&fragments=58800&problemId=15756\">时间区间</a></p>\n<p>看到这个题和样例就可以明白：这就是线段树      </p>\n<p>然后仔细观察样例和题意：如果把每一个操作当做一个元素，实际上对于一个区间来说就是在<b>进行这些操作的前缀和</b>。然而我们还有时间这一个要素，明显没有那么好做。         </p>\n<p>但是这是一个传统的区间求和的线段树啊，那么用不了直接的前缀和就退而求其次使用<b>差分</b>。于是这道题基本就是做出来了：开两个线段树维护差分，在pushdown里面写两遍操作。代码难度十分的简单。相对于思路是简单多了           </p>\n<p>赛时实际上想出来了这一题的正解，但是没有写出来。<del>主要还是太摆烂了</del></p>\n<hr>\n<p>T4：<a href=\"https://www.xinyoudui.com/contest?courses=676&books=659&pages=18948&fragments=58800&problemId=9648\">礼尚往来</a></p>\n<p>这道题打了20分的暴力：按照题意直接模拟，发现返回的A值就是区间中的最大值。狂扫一个区间就可以暴力获得20分了！然而实际上我还查了口气，只需要维护一个优先队列，每次取出最大值和A交换就可以极为简短的完成 <em>l&#x3D;1,r&#x3D;n</em> 的数据，获得更多的分数。          </p>\n<p>接下来来看正解：考虑使用分块：将序列分成若干个块，对于每一个块都维护一个上述的优先队列，如果有一个块被查询的区间完全覆盖了，就可以优先队列<em>log</em>的时间复杂度完成一次和A的交换。     </p>\n<p>相反的，如果块属于区间的两端，就必须要重构了。根据记录的信息还原：有很多个A来过，用一个小根堆保存这些A。然后扫一遍块，对于某一个位置上的x来说，如果有很多个A来过，就把小根堆的头拿出来放到x里面。如此扫完每一个x。设块的长度是B，时间复杂度就是BlogB。</p>\n<p>最后时间复杂度是典中典的分块时间复杂度：B可以约等于为根号n，所以得到复杂度<br>$$<br>O(q\\sqrt n \\log n)<br>$$<br>（一个作为代码块屹立在整一篇题解最后的中央的分块复杂度好好笑2333</p>\n","tags":["oi"]},{"title":"guess what?","url":"/posts/ed4f3278/","content":"<p>啥？</p>\n"},{"title":"Hello World","url":"/posts/4a17b156/","content":"<p>大家好啊！我是AnteAntibe。由于之前一个博客炸了所以新开了一个                </p>\n<p>2009年生日，目前<code>初三</code>。坐标杭州拱墅，<del>在一所垃圾公办被薄纱</del>             </p>\n<p>是oier，平时随便写写题，周末随缘atc一下的摆烂选手。        </p>\n<p>成分方面，烂大街的二游是玩的，番看得是很少的。烂大街的引诱是玩的，曲子也是听的（引诱，术力口，还有三个好亲友推歌）。pgrrks大概15.3左右，arc刚红框，4k只能3dan。玩过月计，玩过ut，还有一些别的，现在都没什么浓度了。    </p>\n<p>总结：学习烂，水平烂，各方面都很失败的落魄颓废人。      </p>\n<p>今天也没什么时间了（瞧我markdown都没怎么用 ），最后贴几个东西吧：     </p>\n<p><a href=\"https://www.luogu.com.cn/user/374452\">Luogu</a> ， <a href=\"https://space.bilibili.com/490092552?spm_id_from=333.1007.0.0\">B站</a>，QQ：1942459191    平台上的昵称基本都是AnteAntibe，也不会有什么重名就是了</p>\n<p>常用的剪贴板：note.ms&#x2F;wsr     note.ms&#x2F;hyf    note.ms&#x2F;Ante     note.ms&#x2F;AnteAntibe    note.ms&#x2F;yrd</p>\n"}]